plugin.tx_streamovationsvp {
	view {
		templateRootPaths.10 = {$plugin.tx_streamovationsvp.view.templateRootPath}
		partialRootPaths.10 = {$plugin.tx_streamovationsvp.view.partialRootPath}
		layoutRootPaths.10 = {$plugin.tx_streamovationsvp.view.layoutRootPath}
	}
	
	# rest repository configuration
	rest {
		repository {
			default {
				features {
					# only works for request types that support it
					ignoreHttpConfiguration = 0
					# model-less fallback, i.e. for development purposes or eid scripts 
					disableResponseMapper = 0
				}
				request {
					scheme = {$plugin.tx_streamovationsvp.rest.scheme}
					baseUri = {$plugin.tx_streamovationsvp.rest.baseUri}
					apiUri = api.php
				}
				cache {
					enable = 1
				}
			}
			Event {
				request.apiUri = api.php/sessions/date
				response {
					rootElement = events
					list = 1
				}
			}
			Playlist {
				request {
					apiUri = api.php/playlists
					strip.names = hash
				}
				response {
					exclude = result,errorType,servertime,clientIp,uiLabels
					property.playlist {
						mappings.10 = playlistItems
						remove = 1
					}
				}
			}
			Meetingdata {
				request.apiUri = api.php/meetingdata
				response {
					exclude = result,confidentialSessions,twitterHashtag
					property {
						timestamps {
							mappings {
								10 = topicTimeline
								10.if {
									field = metadataType
									value = topic
								}
								10.else.sendToMapping = 20
								20 = speakerTimeline
							}
							remove = 1
						}
						topicTimeline.json = 1
						speakerTimeline.json = 1
						eventBreaks.filterList = last
					}
				}
			}
		}
		
		# different cache lifetimes for livestreams
		controller.Video.action.liveStream {
			repository {
				default.cache.lifetime = 60
				Event.cache.lifetime = 30
			}
		}
	}
	
	# assets provider configuration
	assets {
		controller.Video.action.show {
			javascript {
				# note: we can't async these! content is depending on their immediate availability!
				libs {
					jQuery = {$plugin.tx_streamovationsvp.javascript.jqueryLib}
					jQuery.if.value = {$plugin.tx_streamovationsvp.javascript.includeJquery}
					jQuery.if.equals = 1
					jQuery.forceOnTop = 1
					jQuery.placeInFooter = 1
					
					jwPlayer6 = {$plugin.tx_streamovationsvp.javascript.jwPlayer6Lib}
					jwPlayer6.if.value = {$plugin.tx_streamovationsvp.settings.player}
					jwPlayer6.if.equals = 1
					jwPlayer6.placeInFooter = 1
					# this sucks, but if not loaded from original location, it can't find its dependencies out of the box
					jwPlayer6.disableCompression = 1
					jwPlayer6.excludeFromConcatenation = 1
					
					jwPlayer7 < .jwPlayer6
					jwPlayer7 = {$plugin.tx_streamovationsvp.javascript.jwPlayer7Lib}
					jwPlayer7.if.equals = 2
					
					smvPlayer < .jwPlayer6
					smvPlayer = {$plugin.tx_streamovationsvp.javascript.smvPlayerLib}
					smvPlayer.if.equals = 3
				}
				inline {
					tx_streamovationsvp_jsInline {
						# SvpStarter
						10 = TEMPLATE
						10.template = STREAMOVATIONS_VP_FILE
						10.template.file = {$plugin.tx_streamovationsvp.javascript.starterFile}
						10.marks {
							PLAYER_TYPE = TEXT
							PLAYER_TYPE.value = {$plugin.tx_streamovationsvp.settings.player}
							POLLING_INTERVAL = TEXT
							POLLING_INTERVAL.value = {$plugin.tx_streamovationsvp.settings.polling.interval}
							CURRENT_PAGE_ID = TEXT
							CURRENT_PAGE_ID.data = TSFE:id
							SPEAKER_IMAGE_DIR = USER
							SPEAKER_IMAGE_DIR.userFunc = Innologi\StreamovationsVp\TypoScript\Utility->resolvePath
							SPEAKER_IMAGE_DIR.path = {$plugin.tx_streamovationsvp.settings.speakers.imgDir}
							MEETINGDATA_BREAKS = TEXT
							MEETINGDATA_BREAKS.value = {$plugin.tx_streamovationsvp.settings.breaks.enable}
							MEETINGDATA_TOPICS = TEXT
							MEETINGDATA_TOPICS.value = {$plugin.tx_streamovationsvp.settings.topics.enable}
							MEETINGDATA_SPEAKERS = TEXT
							MEETINGDATA_SPEAKERS.value = {$plugin.tx_streamovationsvp.settings.speakers.enable}
							# note that TS LLL doesn't resolve _LOCAL_LANG overrides because of TSFE->sL() !
							VIDEO_BREAK_TITLE = TEXT
							VIDEO_BREAK_TITLE.data = LLL:EXT:streamovations_vp/Resources/Private/Language/locallang.xlf:video_break_title
							VIDEO_BREAK_TITLE.trim = 1
							VIDEO_BREAK_SUB = TEXT
							VIDEO_BREAK_SUB.data = LLL:EXT:streamovations_vp/Resources/Private/Language/locallang.xlf:video_break_sub
							VIDEO_BREAK_SUB.trim = 1
						}
						# SvpPolling
						20 = STREAMOVATIONS_VP_FILE
						20.file = {$plugin.tx_streamovationsvp.javascript.pollingFile}
						# init
						30 = STREAMOVATIONS_VP_FILE
						30.file = {$plugin.tx_streamovationsvp.javascript.initFile}
						placeInFooter = 1
					}
				}
			}
		}
	}
	
	settings {
		player = {$plugin.tx_streamovationsvp.settings.player}
		smvPlayer {
			forceHttps = {$plugin.tx_streamovationsvp.settings.smvPlayer.forceHttps}
			skin = {$plugin.tx_streamovationsvp.settings.smvPlayer.skin}
		}
		jwPlayer {
			key = {$plugin.tx_streamovationsvp.settings.jwPlayer.key}
			width = {$plugin.tx_streamovationsvp.settings.jwPlayer.width}
			height = {$plugin.tx_streamovationsvp.settings.jwPlayer.height}
			liveLanguage = {$plugin.tx_streamovationsvp.settings.jwPlayer.liveLanguage}
			smilSupport = {$plugin.tx_streamovationsvp.settings.jwPlayer.smilSupport}
			smilWrap = {$plugin.tx_streamovationsvp.settings.jwPlayer.smilWrap}
		}
		breaks {
			enable = {$plugin.tx_streamovationsvp.settings.breaks.enable}
		}
		topics {
			enable = {$plugin.tx_streamovationsvp.settings.topics.enable}
		}
		speakers {
			enable = {$plugin.tx_streamovationsvp.settings.speakers.enable}
			imgDir = {$plugin.tx_streamovationsvp.settings.speakers.imgDir}
			imgHeight = {$plugin.tx_streamovationsvp.settings.speakers.imgHeight}
			imgWidth = {$plugin.tx_streamovationsvp.settings.speakers.imgWidth}
			imgDefault = {$plugin.tx_streamovationsvp.settings.speakers.imgDefault}
		}
		hashHeader {
            enable = {$plugin.tx_streamovationsvp.settings.hashHeader.enable}
        }
		advanced {
			enable = 0
			category =
			subCategory =
			tags =
			dateAt =
			dateTimeAt =
		}
		# @TODO settings like these are also read by AssetProvider. I should find a way to store them in settings first, then refer to settings for AssetProvider
		polling.interval = {$plugin.tx_streamovationsvp.settings.polling.interval}
	}
}

page.includeCSS.streamovationsVpFrontend = {$plugin.tx_streamovationsvp.css.frontendFile}